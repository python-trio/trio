trigger:
  branches:
    exclude:
    - 'dependabot/*'

jobs:

- job: 'Windows'
  pool:
    vmImage: 'windows-latest'
  timeoutInMinutes: 20
  strategy:
    # Python version list:
    #   64-bit: https://www.nuget.org/packages/python/
    #   32-bit: https://www.nuget.org/packages/pythonx86/
    matrix:
      # The LSP tests can be super slow for some reason - like
      # sometimes it just randomly takes 5 minutes to run the LSP
      # installer. So we put them at the top, so they can get started
      # earlier.
      "with IFS LSP, Python 3.7, 64 bit":
        python.version: '3.7.5'
        python.pkg: 'python'
        lsp: 'http://www.proxifier.com/download/ProxifierSetup.exe'
      "with non-IFS LSP, Python 3.7, 64 bit":
        python.version: '3.7.5'
        python.pkg: 'python'
        lsp: 'http://download.pctools.com/mirror/updates/9.0.0.2308-SDavfree-lite_en.exe'
      "Python 3.6, 32 bit":
        python.version: '3.6.8'
        python.pkg: 'pythonx86'
      "Python 3.6, 64 bit":
        python.version: '3.6.8'
        python.pkg: 'python'
      "Python 3.7, 32 bit":
        python.version: '3.7.5'
        python.pkg: 'pythonx86'
      "Python 3.7, 64 bit":
        python.version: '3.7.5'
        python.pkg: 'python'
      "Python 3.8, 32 bit":
        python.version: '3.8.0'
        python.pkg: 'pythonx86'
      "Python 3.8, 64 bit":
        python.version: '3.8.0'
        python.pkg: 'python'

  steps:
  - task: NuGetToolInstaller@0

  - bash: ./ci.sh
    displayName: "Run the actual tests"

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'test-results.xml'
      testRunTitle: 'Windows $(python.pkg) $(python.version)'
    condition: succeededOrFailed()

- job: 'Linux'
  pool:
    vmImage: 'ubuntu-latest'
  timeoutInMinutes: 10
  strategy:
    matrix:
      "Check docs":
        python.version: '3.8'
        CHECK_DOCS: 1
      "Formatting and linting":
        python.version: '3.8'
        CHECK_FORMATTING: 1
      "Python 3.6":
        python.version: '3.6'
      "Python 3.7":
        python.version: '3.7'
      "Python 3.8":
        python.version: '3.8'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - bash: ./ci.sh
    displayName: "Run the actual tests"

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'test-results.xml'
    condition: succeededOrFailed()

- job: 'macOS'
  pool:
    vmImage: 'macOS-latest'
  timeoutInMinutes: 10
  strategy:
    matrix:
      "Python 3.6":
        python.version: '3.6'
      "Python 3.7":
        python.version: '3.7'
      "Python 3.8":
        python.version: '3.8'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - bash: ./ci.sh
    displayName: "Run the actual tests"

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'test-results.xml'
    condition: succeededOrFailed()
