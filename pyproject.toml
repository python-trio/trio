[tool.black]
target-version = ['py38']
force-exclude = '''
(
  ^/docs/source/reference-.*
  | ^/docs/source/tutorial
)
'''

[tool.codespell]
ignore-words-list = 'astroid,crasher,asend'

[tool.ruff]
target-version = "py38"
respect-gitignore = true
fix = true

allowed-confusables = ["â€“"]

# The directories to consider when resolving first vs. third-party imports.
# Does not control what files to include/exclude!
src = ["trio", "notes-to-self"]

select = [
  "RUF",  # Ruff-specific rules
  "F",  # pyflakes
  "E",  # Error
  "W",  # Warning
  "I",  # isort
  "UP",  # pyupgrade
  "B",  # flake8-bugbear
  "YTT",  # flake8-2020
  "ASYNC",  # flake8-async
  "PYI",  # flake8-pyi
  "SIM",  # flake8-simplify
]
extend-ignore = [
    'F403',  # undefined-local-with-import-star
    'F405',  # undefined-local-with-import-star-usage
    'E402',  # module-import-not-at-top-of-file (usually OS-specific)
    'E501',  # line-too-long
    'SIM117',  # multiple-with-statements (messes up lots of context-based stuff and looks bad)
]

include = ["*.py", "*.pyi", "**/pyproject.toml"]

extend-exclude = [
  "docs/source/reference-*",
  "docs/source/tutorial/*",
]

[tool.ruff.per-file-ignores]
'trio/__init__.py' = ['F401']
'trio/_core/__init__.py' = ['F401']
'trio/_core/_tests/test_multierror_scripts/*' = ['F401']
'trio/abc.py' = ['F401']
'trio/lowlevel.py' = ['F401']
'trio/socket.py' = ['F401']
'trio/testing/__init__.py' = ['F401']

[tool.ruff.isort]
combine-as-imports = true

[tool.mypy]
python_version = "3.8"

# Be flexible about dependencies that don't have stubs yet (like pytest)
ignore_missing_imports = true

# Be strict about use of Mypy
local_partial_types = true
warn_unused_ignores = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true

# Avoid subtle backsliding
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
addopts = ["--strict-markers", "--strict-config"]
faulthandler_timeout = 60
filterwarnings = [
  "error",
  # https://gitter.im/python-trio/general?at=63bb8d0740557a3d5c688d67
  'ignore:You are using cryptography on a 32-bit Python on a 64-bit Windows Operating System. Cryptography will be significantly faster if you switch to using a 64-bit Python.:UserWarning',
  # this should remain until https://github.com/pytest-dev/pytest/pull/10894 is merged
  'ignore:ast.Str is deprecated:DeprecationWarning',
  'ignore:Attribute s is deprecated and will be removed:DeprecationWarning',
  'ignore:ast.NameConstant is deprecated:DeprecationWarning',
  'ignore:ast.Num is deprecated:DeprecationWarning',
  # https://github.com/python/mypy/issues/15330
  'ignore:ast.Ellipsis is deprecated:DeprecationWarning',
  'ignore:ast.Bytes is deprecated:DeprecationWarning'
]
junit_family = "xunit2"
markers = ["redistributors_should_skip: tests that should be skipped by downstream redistributors"]
xfail_strict = true

[tool.towncrier]
directory = "newsfragments"
filename = "docs/source/history.rst"
issue_format = "`#{issue} <https://github.com/python-trio/trio/issues/{issue}>`__"
# Usage:
# - PRs should drop a file like "issuenumber.feature" in newsfragments
# (or "bugfix", "doc", "removal", "misc"; misc gets no text, we can
# customize this)
# - At release time after bumping version number, run: towncrier
# (or towncrier --draft)
package = "trio"
underlines = ["-", "~", "^"]

[[tool.towncrier.type]]
directory = "headline"
name = "Headline features"
showcontent = true

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecations and removals"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Removals without deprecations"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous internal changes"
showcontent = true
