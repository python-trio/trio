[tool.black]
target-version = ['py38']

[tool.flake8]
extend-ignore = ['D', 'E', 'W', 'F403', 'F405', 'F821', 'F822']
per-file-ignores = [
  'trio/__init__.py: F401',
  'trio/_core/__init__.py: F401',
  'trio/_core/_generated*.py: F401',
  'trio/_core/_tests/test_multierror_scripts/*: F401',
  'trio/abc.py: F401',
  'trio/lowlevel.py: F401',
  'trio/socket.py: F401',
  'trio/testing/__init__.py: F401'
]

[tool.isort]
combine_as_imports = true
profile = "black"
skip_gitignore = true

[tool.mypy]
python_version = "3.8"

# Be flexible about dependencies that don't have stubs yet (like pytest)
ignore_missing_imports = true

# Be strict about use of Mypy
warn_unused_ignores = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true

# Avoid subtle backsliding
#disallow_any_decorated = true
disallow_incomplete_defs = true
#disallow_subclassing_any = true

# Enable gradually / for new modules
check_untyped_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_any_generics = true

# DO NOT use `ignore_errors`; it doesn't apply
# downstream and users have to deal with them.
[[tool.mypy.overrides]]
module = [
    "trio._socket",
    "trio._core._local",
    "trio._sync",
]
disallow_untyped_defs = true
disallow_any_generics = true

[[tool.mypy.overrides]]
module = "trio._core._run"
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_any_generics = false

# TODO: gen_exports add platform checks to specific files
[[tool.mypy.overrides]]
module = "trio/_core/_generated_run"
disable_error_code = ['has-type']
[[tool.mypy.overrides]]
module = [
    "trio/_core/_generated_io_kqueue",
    "trio/_core/_generated_io_windows",
    ]

disable_error_code = ['name-defined', 'attr-defined', 'no-any-return']
[[tool.mypy.overrides]]
module = "trio/_core/_generated_io_epoll"
disable_error_code = ['no-any-return']

[[tool.mypy.overrides]]
module = [
"trio/_core/_tests/*",
"trio/_tests/*",

# windows
"trio/_windows_pipes",
"trio/_core/_windows_cffi", # 2, 324
"trio/_core/_generated_io_windows", # 9 (win32), 84
"trio/_core/_io_windows", # 47 (win32), 867

#"trio/_core/_io_common", # 1, 24
#"trio/_core/_generated_io_epoll", # 3, 36
#"trio/_core/_generated_io_kqueue", # 6 (darwin), 60
#"trio/_core/_generated_run", # 8, 242
#"trio/_core/_io_kqueue", # 16, 198
#"trio/_core/_io_epoll", # 21, 323

#"trio/_core/_thread_cache", # 6, 273
"trio/_core/_traps", # 7, 276
"trio/_core/_asyncgens", # 10, 194

"trio/_core/_wakeup_socketpair", # 12
"trio/_core/_ki", # 14, 210
"trio/_core/_entry_queue", # 16, 195
"trio/_core/_multierror", # 19, 469



"trio/testing/_network", # 1, 34
"trio/testing/_trio_test", # 2, 29
"trio/testing/_checkpoints", # 3, 62
"trio/testing/_check_streams", # 27, 522
"trio/testing/_fake_net", # 30
"trio/testing/_memory_streams", # 66, 590

"trio/_highlevel_open_unix_stream", # 2, 49 lines
"trio/_highlevel_open_tcp_listeners", # 3, 227 lines
"trio/_highlevel_serve_listeners", # 3, 121 lines
"trio/_highlevel_ssl_helpers", # 3, 155 lines
"trio/_highlevel_socket", # 4, 386 lines
"trio/_highlevel_open_tcp_stream", # 5, 379 lines

"trio/_subprocess_platform/waitid", # 2, 107 lines
"trio/_wait_for_object", # 2 (windows)
"trio/_deprecate", # 12, 140lines
"trio/_util", # 13, 348 lines
"trio/_file_io", # 13, 191 lines
"trio/_signals", # 13, 168 lines
"trio/_threads", # 15, 398 lines
"trio/_path", # 21, 295 lines
"trio/_subprocess", # 21, 759 lines
"trio/_ssl", # 26, 929 lines
]
disallow_untyped_defs = false
disallow_any_generics = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
addopts = ["--strict-markers", "--strict-config"]
faulthandler_timeout = 60
filterwarnings = [
  "error",
  # https://gitter.im/python-trio/general?at=63bb8d0740557a3d5c688d67
  'ignore:You are using cryptography on a 32-bit Python on a 64-bit Windows Operating System. Cryptography will be significantly faster if you switch to using a 64-bit Python.:UserWarning',
  # this should remain until https://github.com/pytest-dev/pytest/pull/10894 is merged
  'ignore:ast.Str is deprecated:DeprecationWarning',
  'ignore:Attribute s is deprecated and will be removed:DeprecationWarning',
  'ignore:ast.NameConstant is deprecated:DeprecationWarning',
  'ignore:ast.Num is deprecated:DeprecationWarning',
  # https://github.com/python/mypy/issues/15330
  'ignore:ast.Ellipsis is deprecated:DeprecationWarning',
  'ignore:ast.Bytes is deprecated:DeprecationWarning'
]
junit_family = "xunit2"
markers = ["redistributors_should_skip: tests that should be skipped by downstream redistributors"]
xfail_strict = true

[tool.towncrier]
directory = "newsfragments"
filename = "docs/source/history.rst"
issue_format = "`#{issue} <https://github.com/python-trio/trio/issues/{issue}>`__"
# Usage:
# - PRs should drop a file like "issuenumber.feature" in newsfragments
# (or "bugfix", "doc", "removal", "misc"; misc gets no text, we can
# customize this)
# - At release time after bumping version number, run: towncrier
# (or towncrier --draft)
package = "trio"
underlines = ["-", "~", "^"]

[[tool.towncrier.type]]
directory = "headline"
name = "Headline features"
showcontent = true

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecations and removals"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous internal changes"
showcontent = true
