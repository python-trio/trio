name: CI

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:

jobs:
  Windows:
    name: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'
    timeout-minutes: 20
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.6', '3.7', '3.8', '3.9']
        arch: ['x86', 'x64']
        lsp: ['']
        lsp_extract_file: ['']
        extra_name: ['']
        include:
          - python: '3.8'
            arch: 'x64'
            lsp: 'https://raw.githubusercontent.com/python-trio/trio-ci-assets/master/komodia-based-vpn-setup.zip'
            lsp_extract_file: 'komodia-based-vpn-setup.exe'
            extra_name: ', with Komodia LSP'
          - python: '3.8'
            arch: 'x64'
            lsp: 'https://www.proxifier.com/download/legacy/ProxifierSetup342.exe'
            lsp_extract_file: ''
            extra_name: ', with IFS LSP'
          #- python: '3.8'
          #  arch: 'x64'
          #  lsp: 'http://download.pctools.com/mirror/updates/9.0.0.2308-SDavfree-lite_en.exe'
          #  lsp_extract_file: ''
          #  extra_name: ', with non-IFS LSP'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
          architecture: '${{ matrix.arch }}'
      - name: Run tests
        run: ./ci.sh
        shell: bash
        env:
          LSP: '${{ matrix.lsp }}'
          LSP_EXTRACT_FILE: '${{ matrix.lsp_extract_file }}'
          # Should match 'name:' up above
          JOB_NAME: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'

  Ubuntu:
    name: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'
    timeout-minutes: 10
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['pypy-3.6', 'pypy-3.7', '3.6', '3.7', '3.8', '3.9', '3.8-dev', '3.9-dev']
        check_formatting: ['0']
        pypy_nightly_branch: ['']
        extra_name: ['']
        include:
          - python: '3.8'
            check_formatting: '1'
            extra_name: ', check formatting'
          - python: '3.7'  # <- not actually used
            pypy_nightly_branch: 'py3.7'
            extra_name: ', pypy 3.7 nightly'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        if: "!endsWith(matrix.python, '-dev')"
        with:
          python-version: '${{ matrix.python }}'
      - name: Setup python (dev)
        uses: deadsnakes/action@v2.0.2
        if: endsWith(matrix.python, '-dev')
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        env:
          PYPY_NIGHTLY_BRANCH: '${{ matrix.pypy_nightly_branch }}'
          CHECK_FORMATTING: '${{ matrix.check_formatting }}'
          # Should match 'name:' up above
          JOB_NAME: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'

  macOS:
    name: 'macOS (${{ matrix.python }})'
    timeout-minutes: 10
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        env:
          # Should match 'name:' up above
          JOB_NAME: 'macOS (${{ matrix.python }})'
