name: CI

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:

jobs:
  Windows:
    name: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'
    timeout-minutes: 20
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', 'pypy-3.8-nightly', 'pypy-3.9-nightly']
        arch: ['x86', 'x64']
        lsp: ['']
        lsp_extract_file: ['']
        extra_name: ['']
        exclude:
          - python: 'pypy-3.8-nightly'
            arch: 'x86'
          - python: 'pypy-3.9-nightly'
            arch: 'x86'
        include:
          - python: '3.8'
            arch: 'x64'
            lsp: 'https://raw.githubusercontent.com/python-trio/trio-ci-assets/master/komodia-based-vpn-setup.zip'
            lsp_extract_file: 'komodia-based-vpn-setup.exe'
            extra_name: ', with Komodia LSP'
          - python: '3.8'
            arch: 'x64'
            lsp: 'https://www.proxifier.com/download/legacy/ProxifierSetup342.exe'
            lsp_extract_file: ''
            extra_name: ', with IFS LSP'
          #- python: '3.8'
          #  arch: 'x64'
          #  lsp: 'http://download.pctools.com/mirror/updates/9.0.0.2308-SDavfree-lite_en.exe'
          #  lsp_extract_file: ''
          #  extra_name: ', with non-IFS LSP'
    continue-on-error: >-
      ${{
        (
          endsWith(matrix.python, '-dev')
          || endsWith(matrix.python, '-nightly')
        )
        && true
        || false
      }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          # This allows the matrix to specify just the major.minor version while still
          # expanding it to get the latest patch version including alpha releases.
          # This avoids the need to update for each new alpha, beta, release candidate,
          # and then finally an actual release version.  actions/setup-python doesn't
          # support this for PyPy presently so we get no help there.
          #
          # CPython -> 3.9.0-alpha - 3.9.X
          # PyPy    -> pypy-3.7
          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python), matrix.python))[startsWith(matrix.python, 'pypy')] }}
          architecture: '${{ matrix.arch }}'
          cache: pip
          cache-dependency-path: test-requirements.txt
      - name: Run tests
        run: ./ci.sh
        shell: bash
        env:
          LSP: '${{ matrix.lsp }}'
          LSP_EXTRACT_FILE: '${{ matrix.lsp_extract_file }}'
          # Should match 'name:' up above
          JOB_NAME: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'

  Ubuntu:
    name: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'
    timeout-minutes: 10
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['pypy-3.7', 'pypy-3.8', 'pypy-3.9', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12-dev', 'pypy-3.8-nightly', 'pypy-3.9-nightly']
        check_formatting: ['0']
        extra_name: ['']
        include:
          - python: '3.8'
            check_formatting: '1'
            extra_name: ', check formatting'
    continue-on-error: >-
      ${{
        (
          matrix.check_formatting == '1'
          || endsWith(matrix.python, '-dev')
          || endsWith(matrix.python, '-nightly')
        )
        && true
        || false
      }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        if: "!endsWith(matrix.python, '-dev')"
        with:
          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python), matrix.python))[startsWith(matrix.python, 'pypy')] }}
          cache: pip
          cache-dependency-path: test-requirements.txt
      - name: Setup python (dev)
        uses: deadsnakes/action@v2.0.2
        if: endsWith(matrix.python, '-dev')
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        env:
          CHECK_FORMATTING: '${{ matrix.check_formatting }}'
          # Should match 'name:' up above
          JOB_NAME: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'

  autofmt:
    name: Autoformat dependabot PR
    timeout-minutes: 10
    if: github.actor == 'dependabot[bot]'
    runs-on: 'ubuntu-latest'
    # https://docs.github.com/en/code-security/dependabot/working-with-dependabot/automating-dependabot-with-github-actions#changing-github_token-permissions
    permissions:
      pull-requests: write
      issues: write
      repository-projects: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Check formatting
        run: |
          python -m pip install -r test-requirements.txt
          ./check.sh
      - name: Commit autoformatter changes
        if: failure()
        run: |
          black setup.py trio
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git commit -am "Autoformatter changes"
          git push

  macOS:
    name: 'macOS (${{ matrix.python }})'
    timeout-minutes: 15
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', 'pypy-3.8-nightly', 'pypy-3.9-nightly']
    continue-on-error: >-
      ${{
        (
          endsWith(matrix.python, '-dev')
          || endsWith(matrix.python, '-nightly')
        )
        && true
        || false
      }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python), matrix.python))[startsWith(matrix.python, 'pypy')] }}
          cache: pip
          cache-dependency-path: test-requirements.txt
      - name: Run tests
        run: ./ci.sh
        env:
          # Should match 'name:' up above
          JOB_NAME: 'macOS (${{ matrix.python }})'

  # https://github.com/marketplace/actions/alls-green#why
  check:  # This job does nothing and is only used for the branch protection

    if: always()

    needs:
      - Windows
      - Ubuntu
      - macOS

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
